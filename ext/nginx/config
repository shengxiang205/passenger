PATH="$ngx_addon_dir/../../bin:$PATH"
export PATH

if test "x$PASSENGER_LIBS" = "x" && ! passenger-config --compiled; then
    echo "*** The Phusion Passenger support files are not yet compiled. Compiling them for you... ***"
    echo "*** Running 'rake nginx CACHING=false' in $ngx_addon_dir... ***"
    old_dir=`pwd`
    if ! cd $ngx_addon_dir; then
        exit 1
    fi
    if test "x$TRACE" = 1; then
        if ! rake --trace nginx CACHING=false; then
            exit 1
        fi
    else
        if ! rake nginx CACHING=false; then
            exit 1
        fi
    fi
    cd "$old_dir"
    echo "*** Phusion Passenger support files have been successfully compiled. ***"
fi

ngx_addon_name=ngx_http_passenger_module
HTTP_MODULES="$HTTP_MODULES ngx_http_passenger_module"
NGX_ADDON_SRCS="$NGX_ADDON_SRCS \
    ${ngx_addon_dir}/ngx_http_passenger_module.c \
    ${ngx_addon_dir}/Configuration.c \
    ${ngx_addon_dir}/ContentHandler.c \
    ${ngx_addon_dir}/StaticContentHandler.c"
NGX_ADDON_DEPS="$NGX_ADDON_DEPS \
    ${ngx_addon_dir}/Configuration.h \
    ${ngx_addon_dir}/ContentHandler.h \
    ${ngx_addon_dir}/StaticContentHandler.h \
    ${ngx_addon_dir}/ngx_http_passenger_module.h \
    `passenger-config --root`/ext/common/Constants.h \
    `passenger-config --root`/ext/common/ApplicationPool2/AppTypes.h"
if test "x$PASSENGER_LIBS" = "x"; then
    CORE_LIBS="$CORE_LIBS `passenger-config --nginx-libs`"
else
    CORE_LIBS="$CORE_LIBS $PASSENGER_LIBS"
fi
CORE_LIBS="$CORE_LIBS -lstdc++ -lpthread"

ngx_feature="Math library"
ngx_feature_name=
ngx_feature_run=no
ngx_feature_incs="#include <math.h>"
ngx_feature_path=
ngx_feature_libs="-lm"
ngx_feature_test="pow(1, 2)"
. auto/feature
if [ $ngx_found = yes ]; then
    CORE_LIBS="$CORE_LIBS -lm"
fi

nginx_version=`grep 'NGINX_VERSION ' src/core/nginx.h | awk '{ print $3 }' | sed 's/"//g'`

nginx_major_version=`echo "$nginx_version" | cut -d . -f 1`
have=PASSENGER_NGINX_MAJOR_VERSION value="$nginx_major_version"
. auto/define

nginx_minor_version=`echo "$nginx_version" | cut -d . -f 2`
have=PASSENGER_NGINX_MINOR_VERSION value="$nginx_minor_version"
. auto/define

nginx_micro_version=`echo "$nginx_version" | cut -d . -f 3`
have=PASSENGER_NGINX_MICRO_VERSION value="$nginx_micro_version"
. auto/define
