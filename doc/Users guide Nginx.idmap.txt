###### Autogenerated by Mizuho, DO NOT EDIT ######
# This file maps section names to IDs so that the commenting system knows which
# comments belong to which section. Section names may be changed at will but
# IDs always stay the same, allowing one to retain old comments even if you
# rename a section.
#
# This file is autogenerated but is not a cache; you MUST NOT DELETE this
# file and you must check it into your version control system. If you lose
# this file you may lose the ability to identity old comments.
#
# Entries marked with "fuzzy" indicate that the section title has changed
# and that Mizuho has found an ID which appears to be associated with that
# section. You should check whether it is correct, and if not, fix it.

1. Support information	=>	support-information-nl5gdn

1.1. Supported operating systems	=>	supported-operating-systems-a5n2x4

1.2. Where to get support	=>	where-to-get-support-2s9na5

2. Installation	=>	installing-phusion-passenger-hn03ac

2.1. Synopsis	=>	synopsis-1uu3sqp

2.2. Generic installation, upgrade and downgrade method: via RubyGems	=>	generic-installation-upgrade-and-downgrade-method-via-rubygems-76uol7

2.3. Generic installation, upgrade and downgrade method: via tarball	=>	generic-installation-upgrade-and-downgrade-method-via-tarball-2gkx43

2.4. Installing or upgrading on Debian 6 or Ubuntu	=>	installing-or-upgrading-on-ubuntu-fw5fvp

2.5. Installing or upgrading on Red Hat, Fedora, CentOS or ScientificLinux	=>	installing-or-upgrading-on-red-hat-fedora-centos-or-scientificlinux-1uus5a1

2.6. Upgrading from open source to Enterprise	=>	upgrading-from-open-source-to-enterprise-1a58c2b

2.7. Non-interactive, automatic, headless installs or upgrades	=>	non-interactive-automatic-headless-installs-or-upgrades-834ymv

2.8. Customizing the compilation process	=>	customizing-the-compilation-process-u4cdcf

2.8.1. Setting the compiler	=>	setting-the-compiler-1l6dpe1

2.8.2. Adding additional compiler or linker flags	=>	adding-additional-compiler-or-linker-flags-1jehjon

2.8.3. Forcing location of certain command line tools	=>	forcing-location-of-certain-command-line-tools-1j93cki

2.9. Installing as a normal Nginx module without using the installer	=>	installing-as-a-normal-nginx-module-without-using-the-installer-1kkpes5

2.10. Creating an Nginx init script	=>	creating-an-nginx-init-script-1kd8zg5

2.11. Disabling without uninstalling	=>	disabling-without-uninstalling-1t5tqan

2.12. Uninstalling	=>	uninstalling-phusion-passenger-wuycvb

2.13. Moving to a different directory	=>	moving-to-a-different-directory-gif3wo

3. Deploying a Ruby on Rails 1.x or 2.x (but NOT Rails >= 3) application	=>	deploying-a-ruby-on-rails-1-x-or-2-x-but-not-rails-3-application-b69gqa

3.1. Deploying to a virtual host’s root	=>	deploying-to-a-virtual-host-s-root-1mh24z5

3.2. Deploying to a sub URI	=>	deploying-to-a-sub-uri-1il2qj7

3.3. Redeploying (restarting the Ruby on Rails application)	=>	redeploying-restarting-the-ruby-on-rails-application--1eso761

3.4. Migrations	=>	migrations-9yyb8w

3.5. Capistrano integration	=>	capistrano-integration-1ktunm6

4. Deploying a Rack-based Ruby application (including Rails >= 3)	=>	deploying-a-rack-based-ruby-application-including-rails-3--12benx3

4.1. Tutorial/example: writing and deploying a Hello World Rack application	=>	tutorial-example-writing-and-deploying-a-hello-world-rack-application-1wstx99

4.2. Deploying to a virtual host’s root	=>	deploying-to-a-virtual-host-s-root-f02erj

4.3. Deploying to a sub URI	=>	deploying-to-a-sub-uri-37q0ou

4.4. Redeploying (restarting the Rack application)	=>	redeploying-restarting-the-rack-application--xnbfam

4.5. Rackup specifications for various web frameworks	=>	rackup-specifications-for-various-web-frameworks-1a2cs41

4.5.1. Camping	=>	camping-16vz2yb

4.5.2. Halcyon	=>	halcyon-1benlfl

4.5.3. Mack	=>	mack-1ezijq6

4.5.4. Merb	=>	merb-ddsh55

4.5.5. Ramaze	=>	ramaze-1p2zod

4.5.6. Sinatra	=>	sinatra-a7u9ag

5. Deploying a WSGI (Python) application	=>	deploying-a-wsgi-python-application-1or2efo

5.1. Tutorial/example: writing and deploying a Hello World WSGI application	=>	tutorial-example-writing-and-deploying-a-hello-world-wsgi-application-k5ron2

5.2. Deploying to a virtual host’s root	=>	deploying-to-a-virtual-host-s-root-1chcpbj

5.3. Redeploying (restarting the WSGI application)	=>	redeploying-restarting-the-wsgi-application--10zdh2k

6. Configuring Phusion Passenger	=>	configuring-phusion-passenger-1g1svey

6.1. passenger_root <directory>	=>	passenger-root-directory--bqvhhz

6.2. passenger_ruby <filename>	=>	passenger-ruby-filename--1gnok5k

6.3. passenger_app_root <path/to/root>	=>	passenger-app-root-path-to-root--1dbudc6

6.4. passenger_spawn_method <string>	=>	passenger-spawn-method-string--1sc6njl

6.5. passenger_rolling_restarts <on|off>	=>	passenger-rolling-restarts

6.6. passenger_resist_deployment_errors <on|off>	=>	passenger-resist-deployment-errors-on-off--k9yf1

6.7. Important deployment options	=>	important-deployment-options-av567

6.7.1. passenger_enabled <on|off>	=>	passenger-enabled-on-off--1rpb2t7

6.7.2. passenger_base_uri <uri>	=>	passenger-base-uri-uri--1xtuo50

6.8. Connection handling options	=>	connection-handling-options-8jgq90

6.8.1. passenger_ignore_client_abort <on|off>	=>	passenger-ignore-client-abort

6.8.2. passenger_set_cgi_param <CGI environment name> <value>	=>	passenger-set-cgi-param-cgi-environment-name-value--rx9gc0

6.8.3. passenger_pass_header <header name>	=>	passenger-pass-header-header-name--1cg31je

6.8.4. passenger_buffer_response <on|off>	=>	passenger-buffer-response

6.8.5. passenger_buffer_size	=>	passenger-buffer-size-1jfkq87

6.8.6. passenger_buffers	=>	passenger-busy-buffers

6.8.7. passenger_busy_buffer_size	=>	passenger-busy-buffer-size-124sj61

6.9. Security options	=>	security-options-1bv93g4

6.9.1. passenger_user_switching <on|off>	=>	passenger-user-switching-on-off--1p37u3l

6.9.2. passenger_user <username>	=>	passenger-user-username--b06ur7

6.9.3. passenger_group <group name>	=>	passenger-user-group-name--1fco4j7

6.9.4. passenger_default_user <username>	=>	passenger-default-user-username--1h6cdmf

6.9.5. Passenger_default_group <group name>	=>	passenger-default-group-group-name--1qxn2qa

6.9.6. passenger_show_version_in_header <on|off>	=>	passenger-show-version-in-header-on-off--2h49av

6.9.7. passenger_friendly_error_pages <on|off>	=>	passenger-friendly-error-pages-on-off--1ti1a0e

6.10. Resource control and optimization options	=>	resource-control-and-optimization-options-xd7evs

6.10.1. passenger_max_pool_size <integer>	=>	passenger-max-pool-size-integer--3jzefs

6.10.2. passenger_min_instances <integer>	=>	passenger-min-instances-integer--uclykt

6.10.3. passenger_max_instances <integer>	=>	passenger-max-instances

6.10.4. passenger_max_instances_per_app <integer>	=>	passenger-max-instances-per-app-integer--1xhbbne

6.10.5. passenger_pool_idle_time <integer>	=>	passenger-pool-idle-time-integer--xcw65o

6.10.6. passenger_max_preloader_idle_time <integer>	=>	rails-app-spawner-idle-time-integer--1xjqe4b

6.10.7. passenger_concurrency_model <process|thread>	=>	passenger-concurrency-model-process-thread--brcvkk

6.10.8. passenger_thread_count <number>	=>	passenger-thread-count-number--1kd6ffy

6.10.9. passenger_max_requests <integer>	=>	passenger-max-requests-integer--sgzint

6.10.10. passenger_max_request_time <seconds>	=>	passenger-max-request-time-seconds--1htog2g

6.10.11. passenger_memory_limit <integer>	=>	passenger-memory-limit-integer--1ry7dwx

6.10.12. passenger_pre_start <url>	=>	passenger-pre-start-url--npldeb

6.11. Logging and debugging options	=>	logging-and-debugging-options-14e91ni

6.11.1. passenger_log_level <integer>	=>	passenger-log-level-integer--17snhon

6.11.2. passenger_debug_log_file <filename>	=>	passenger-debug-log-file-filename--21ubaj

6.11.3. passenger_debugger <on|off>	=>	passenger-debugger-on-off--1wkuq85

6.12. Ruby on Rails-specific options	=>	ruby-on-rails-specific-options-12vfokt

6.12.1. rails_env <string>	=>	rails-env-string--jlh7v9

6.13. Rack and Rails >= 3 specific options	=>	rack-specific-options-13yvdxs

6.13.1. rack_env <string>	=>	rack-env-string--tqmrt0

6.14. Deprecated options	=>	deprecated-options-1dtzo0g

6.14.1. rails_spawn_method	=>	rails-spawn-method-17vdnpt

7. Analysis and system maintenance	=>	analysis-and-system-maintenance-1nnlnj8

7.1. Inspecting memory usage	=>	inspecting-memory-usage-1k6y8v0

7.2. Inspecting Phusion Passenger’s internal status	=>	inspecting-phusion-passenger-s-internal-status-v36wbc

7.3. Debugging frozen applications	=>	debugging-frozen-applications-qoctl8

7.4. Accessing individual application processes	=>	accessing-individual-application-processes-1qe4fqk

7.5. Attaching an IRB console to an application process	=>	attaching-an-irb-console-to-an-application-process-d36enw

8. Tips	=>	tips-n4c22d

8.1. User switching (security)	=>	user-switching-security--zmsy9o

8.2. Reducing memory consumption of Ruby on Rails applications by 33%	=>	reducing-memory-consumption-of-ruby-on-rails-applications-by-33--1o3z66q

8.3. Capistrano recipe	=>	capistrano-recipe-pfn4qu

8.4. Bundler support	=>	bundler-support-19v1h43

8.5. Installing multiple Ruby on Rails versions	=>	installing-multiple-ruby-on-rails-versions-1bp1fff

8.6. Making the application restart after each request	=>	making-the-application-restart-after-each-request-vimy48

8.7. How to fix broken images/CSS/JavaScript URIs in sub-URI deployments	=>	how-to-fix-broken-images-css-javascript-uris-in-sub-uri-deployments-11mzwt6

8.8. Out-of-Band Garbage Work and Out-of-Band Garbage Collection	=>	out-of-band-garbage-work-and-out-of-band-garbage-collection-v89lu2

9. Under the hood	=>	under-the-hood-8uney

9.1. Page caching support	=>	page-caching-support-nafhf6

9.2. How Phusion Passenger detects whether a virtual host is a web application	=>	how-phusion-passenger-detects-whether-a-virtual-host-is-a-web-application-13qbmhn

10. Appendix A: About this document	=>	appendix-a-about-this-document-zfvixm

11. Appendix B: Terminology	=>	appendix-b-terminology-wzv5ro

11.1. Application root	=>	application-root-1fd6bqv

11.2. Idle process	=>	idle-process-13byfw9

11.3. Inactive process	=>	inactive-process-1d2h0po

12. Appendix C: Spawning methods explained	=>	appendix-c-spawning-methods-explained-tcp8e6

12.1. The most straightforward and traditional way: direct spawning	=>	the-most-straightforward-and-traditional-way-conservative-spawning-civ29z

12.2. The smart spawning method	=>	the-smart-spawning-method-7nhgtj

12.2.1. How it works	=>	how-it-works-f9umga

12.2.2. Summary of benefits	=>	summary-of-benefits-qovyvk

12.3. Smart spawning gotcha #1: unintentional file descriptor sharing	=>	smart-spawning-gotcha-1-unintentional-file-descriptor-sharing-cebw6q

12.3.1. Example 1: Memcached connection sharing (harmful)	=>	example-1-memcached-connection-sharing-harmful--1wfs3ad

12.3.2. Example 2: Log file sharing (not harmful)	=>	example-2-log-file-sharing-not-harmful--ox4yfy

12.4. Smart spawning gotcha #2: the need to revive threads	=>	smart-spawning-gotcha-2-the-need-to-revive-threads-1ey176o

12.5. Smart spawning gotcha #3: code load order	=>	smart-spawning-gotcha-3-code-load-order-12ydsn8

